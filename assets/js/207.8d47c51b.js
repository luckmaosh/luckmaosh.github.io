(window.webpackJsonp=window.webpackJsonp||[]).push([[207],{1721:function(t,e,r){"use strict";r.r(e);var a=r(5),s=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"容错机制浅析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容错机制浅析"}},[t._v("#")]),t._v(" 容错机制浅析")]),t._v(" "),e("p",[t._v("图解 Elasticsearch 容错机制：master 选举，replica 容错，数据恢复")]),t._v(" "),e("p",[e("img",{attrs:{src:r(910),alt:""}})]),t._v(" "),e("p",[t._v("还是使用上一章的例子，9 shard，3 node 来说明 es 的一个最基本的容错机制")]),t._v(" "),e("ol",[e("li",[t._v("master node 宕机，自动 master 选举，red")]),t._v(" "),e("li",[t._v("replica容错：新 master 将 replica 提升为 primary shard，yellow")]),t._v(" "),e("li",[t._v("重启宕机 node，master copy replica 到该 node，使用原有的 shard 并同步宕机后的修改，green")])])])}),[],!1,null,null,null);e.default=s.exports},910:function(t,e,r){t.exports=r.p+"assets/img/markdown-img-paste-20190101152512479.3216fbda.png"}}]);