(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{1472:function(s,a,t){"use strict";t.r(a);var n=t(5),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"如何用-elasticsearch-构建商品搜索系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何用-elasticsearch-构建商品搜索系统"}},[s._v("#")]),s._v(" 如何用 Elasticsearch 构建商品搜索系统？")]),s._v(" "),a("p",[s._v("搜索这个特性可以说是无处不在，现在很少有网站或者系统不提供搜索功能了，所以，即使你不是一个专业做搜索的程序员，也难免会遇到一些搜索相关的需求。搜索这个东西，表面上看功能很简单，就是一个搜索框，输入关键字，然后搜出来想要的内容就好了。")]),s._v(" "),a("p",[s._v("搜索背后的实现，可以非常简单，简单到什么程度呢？我们就用一个 SQL，LIKE 一下就能实现；也可以很复杂，复杂到什么程度呢？不说百度谷歌这种专业做搜索的公司，其他非专业做搜索的互联网大厂，搜索团队大多是千人规模，这里面不仅有程序员，还有算法工程师、业务专家等等。二者的区别也仅仅是，搜索速度的快慢以及搜出来的内容好坏而已。")]),s._v(" "),a("p",[s._v("今天这节课，我们就以电商中的商品搜索作为例子，来讲一下，如何用 ES(Elasticsearch) 来快速、低成本地构建一个体验还不错的搜索系统。")]),s._v(" "),a("h2",{attrs:{id:"理解倒排索引机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#理解倒排索引机制"}},[s._v("#")]),s._v(" 理解倒排索引机制")]),s._v(" "),a("p",[s._v("刚刚我们说了，既然我们的数据大多都是存在数据库里，用 SQL 的 LIKE 也能实现匹配，也能搜出结果，为什么还要专门做一套搜索系统呢？我先来和你分析一下，为什么数据库不适合做搜索。")]),s._v(" "),a("p",[a("strong",[s._v("搜索的核心需求是全文匹配")]),s._v("，对于全文匹配，数据库的索引是根本派不上用场的，那只能全表扫描。全表扫描已经非常慢了，这还不算，还需要在每条记录上做全文匹配，也就是一个字一个字的比对，这个速度就更慢了。所以，使用数据来做搜索，性能上完全没法满足要求。")]),s._v(" "),a("p",[s._v("那 ES 是怎么来解决搜索问题的呢？我们来举个例子说明一下，假设我们有这样两个商品，一个是烟台红富士苹果，一个是苹果手机 iPhone XS Max。")]),s._v(" "),a("p",[a("img",{attrs:{src:t(307),alt:"img"}})]),s._v(" "),a("p",[s._v("这个表里面的 DOCID 就是唯一标识一条记录的 ID，和数据库里面的主键是类似的。")]),s._v(" "),a("p",[s._v("为了能够支持快速地全文搜索，ES 中对于文本采用了一种特殊的索引："),a("strong",[s._v("倒排索引（Inverted Index）")]),s._v("。那我们看一下在 ES 中，这两条商品数据倒排索引长什么样？请看下面这个表。")]),s._v(" "),a("p",[a("img",{attrs:{src:t(308),alt:"img"}})]),s._v(" "),a("p",[s._v("可以看到，这个倒排索引的表，它是以单词作为索引的 Key，然后每个单词的倒排索引的值是一个列表，这个列表的元素就是含有这个单词的商品记录的 DOCID。")]),s._v(" "),a("p",[s._v("这个倒排索引怎么构建的呢？当我们往 ES 写入商品记录的时候，ES 会先对需要搜索的字段，也就是商品标题进行"),a("strong",[s._v("分词")]),s._v("。分词就是把一段连续的文本按照语义拆分成多个单词。然后 ES 按照单词来给商品记录做索引，就形成了上面那个表一样的倒排索引。")]),s._v(" "),a("p",[s._v("当我们搜索关键字 「苹果手机」的时候，ES 会对关键字也进行分词，比如说，「苹果手机」被分为「苹果」和「手机」。然后，ES 会在倒排索引中去搜索我们输入的每个关键字分词，搜索结果应该是：")]),s._v(" "),a("p",[a("img",{attrs:{src:t(309),alt:"img"}})]),s._v(" "),a("p",[s._v("666 和 888 这两条记录都能匹配上搜索的关键词，但是 888 这个商品比 666 这个商品匹配度更高，因为它两个单词都能匹配上，所以按照匹配度把结果做一个排序，最终返回的搜索结果就是：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("苹果")]),s._v("Apple iPhone XS Max (A2104) 256GB 金色 移动联通电信 4G"),a("strong",[s._v("手机")]),s._v("双卡双待")]),s._v(" "),a("li",[s._v("烟台红富士"),a("strong",[s._v("苹果")]),s._v("5kg 一级铂金大果 单果 230g 以上 新鲜水果")])]),s._v(" "),a("p",[s._v("看起来搜索的效果还是不错的。")]),s._v(" "),a("p",[s._v("为什么倒排索引可以做到快速搜索？我和你一起来分析一下上面这个例子的查找性能。")]),s._v(" "),a("p",[s._v("这个搜索过程，其实就是对上面的倒排索引做了二次查找，一次找「苹果」，一次找「手机」。"),a("strong",[s._v("注意，整个搜索过程中，我们没有做过任何文本的模糊匹配")]),s._v("。ES 的存储引擎存储倒排索引时，肯定不是像我们上面表格中展示那样存成一个二维表，实际上它的物理存储结构和 MySQL 的 InnoDB 的索引是差不多的，都是一颗查找树。")]),s._v(" "),a("p",[s._v("对倒排索引做两次查找，也就是对树进行二次查找，它的时间复杂度，类似于 MySQL 中的二次命中索引的查找。显然，这个查找速度，比用 MySQL 全表扫描加上模糊匹配的方式，要快好几个数量级。")]),s._v(" "),a("h2",{attrs:{id:"如何在-es-中构建商品的索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何在-es-中构建商品的索引"}},[s._v("#")]),s._v(" 如何在 ES 中构建商品的索引?")]),s._v(" "),a("p",[s._v("理解了倒排索引的原理之后，我们一起用 ES 构建一个商品索引，简单实现一个商品搜索系统。虽然 ES 是为搜索而生的，但本质上，它仍然是一个存储系统。ES 里面的一些概念，基本上都可以在关系数据库中找到对应的名词，为了便于你快速理解这些概念，我把这些概念的对应关系列出来，你可以对照理解。")]),s._v(" "),a("p",[a("img",{attrs:{src:t(310),alt:"img"}})]),s._v(" "),a("p",[s._v("在 ES 里面，数据的逻辑结构类似于 MongoDB，每条数据称为一个 "),a("strong",[s._v("DOCUMENT")]),s._v("，简称 DOC。DOC 就是一个 JSON 对象，DOC 中的每个 JSON 字段，在 ES 中称为 "),a("strong",[s._v("FIELD")]),s._v("，把一组具有相同字段的 DOC 存放在一起，存放它们的逻辑容器叫 "),a("strong",[s._v("INDEX")]),s._v("，这些 DOC 的 JSON 结构称为 "),a("strong",[s._v("MAPPING")]),s._v("。这里面最不好理解的就是这个 INDEX，它实际上类似于 MySQL 中表的概念，而不是我们通常理解的用于查找数据的索引。")]),s._v(" "),a("p",[s._v("ES 是一个用 Java 开发的服务端程序，除了 Java 以外就没有什么外部依赖了，安装部署都非常简单，具体你可以参照它的官方文档先把 ES 安装好。我们这个示例中，使用的 ES 版本是目前的最新版本 7.6。")]),s._v(" "),a("p",[s._v("另外，为了能让 ES 支持中文分词，需要给 ES 安装一个中文的分词插件 "),a("code",[s._v("IK Analysis for Elasticsearch")]),s._v("，这个插件的作用就是告诉 ES 怎么对中文文本进行分词。")]),s._v(" "),a("p",[s._v("你可以直接执行下面的命令自动下载并安装：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$elasticsearch")]),s._v("-plugin "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.6.0/elasticsearch-analysis-ik-7.6.0.zip\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("安装完成后，需要重启 ES，验证一下是否安装成功：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-X")]),s._v(" POST "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"localhost:9200/_analyze?pretty"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-H")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Content-Type: application/json'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{ "analyzer": "ik_smart", "text": "极客时间" }\'')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tokens"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"token"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"极"')]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"start_offset"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"end_offset"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"type"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CN_CHAR"')]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"position"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"token"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"客"')]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"start_offset"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"end_offset"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"type"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CN_CHAR"')]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"position"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"token"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"时间"')]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"start_offset"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"end_offset"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"type"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CN_WORD"')]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"position"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br")])]),a("p",[s._v("可以看到，这个分词器把「极客时间」分成了极」、「客」和「时间」，没认出来「极客」这个词，还是有改进空间的。")]),s._v(" "),a("p",[s._v("为了能实现商品搜索，我们需要先把商品信息存放到 ES 中，首先我们先定义存放在 ES 中商品的数据结构，也就是 MAPPING。")]),s._v(" "),a("p",[a("img",{attrs:{src:t(311),alt:"img"}})]),s._v(" "),a("p",[s._v("我们这个 MAPPING 只要两个字段就够了，sku_id 就是商品 ID，title 保存商品的标题，当用户在搜索商品的时候，我们在 ES 中来匹配商品标题，返回符合条件商品的 sku_id 列表。ES 默认提供了标准的 RESTful 接口，不需要客户端，直接使用 HTTP 协议就可以访问，这里我们使用 curl 通过命令行来操作 ES。")]),s._v(" "),a("p",[s._v("接下来我们使用上面这个 MAPPING 创建 INDEX，类似于 MySQL 中创建一个表")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-X")]),s._v(" PUT "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"localhost:9200/sku"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-H")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Content-Type: application/json'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{\n        "mappings": {\n                "properties": {\n                        "sku_id": {\n                                "type": "long"\n                        },\n                        "title": {\n                                "type": "text",\n                                "analyzer": "ik_max_word",\n                                "search_analyzer": "ik_max_word"\n                        }\n                }\n        }\n}\'')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"acknowledged"')]),s._v(":true,"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"shards_acknowledged"')]),s._v(":true,"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"index"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sku"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("这里面，使用 PUT 方法创建一个 INDEX，INDEX 的名称是「sku」，直接写在请求的 URL 中。请求的 BODY 是一个 JSON 对象，内容就是我们上面定义的 MAPPING，也就是数据结构。这里面需要注意一下，由于我们要在 title 这个字段上进行全文搜索，所以我们把数据类型定义为 text，并指定使用我们刚刚安装的中文分词插件 IK 作为这个字段的分词器。")]),s._v(" "),a("p",[s._v("创建好 INDEX 之后，就可以往 INDEX 中写入商品数据，插入数据需要使用 HTTP POST 方法：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-X")]),s._v(" POST "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"localhost:9200/sku/_doc/"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-H")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Content-Type: application/json'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{\n        "sku_id": 100002860826,\n        "title": "烟台红富士苹果 5kg 一级铂金大果 单果230g以上 新鲜水果"\n}\'')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_index"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sku"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_type"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_doc"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yxQVSHABiy2kuAJG8ilW"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_version"')]),s._v(":1,"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"result"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"created"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_shards"')]),s._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"total"')]),s._v(":2,"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"successful"')]),s._v(":1,"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"failed"')]),s._v(":0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_seq_no"')]),s._v(":0,"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_primary_term"')]),s._v(":1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-X")]),s._v(" POST "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"localhost:9200/sku/_doc/"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-H")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Content-Type: application/json'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{\n        "sku_id": 100000177760,\n        "title": "苹果 Apple iPhone XS Max (A2104) 256GB 金色 移动联通电信4G手机 双卡双待"\n}\'')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_index"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sku"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_type"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_doc"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zBQWSHABiy2kuAJGgim1"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_version"')]),s._v(":1,"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"result"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"created"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_shards"')]),s._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"total"')]),s._v(":2,"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"successful"')]),s._v(":1,"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"failed"')]),s._v(":0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_seq_no"')]),s._v(":1,"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_primary_term"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("这里面我们插入了两条商品数据，一个烟台红富士，一个 iPhone 手机。然后就可以直接进行商品搜索了，搜索使用 HTTP GET 方法。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-X")]),s._v(" GET "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'localhost:9200/sku/_search?pretty'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-H")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Content-Type: application/json'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{\n  "query" : { "match" : { "title" : "苹果手机" }}\n}\'')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"took"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"timed_out"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" false,\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_shards"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"total"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"successful"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"skipped"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"failed"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hits"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"total"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"relation"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eq"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"max_score"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.8594865")]),s._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hits"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_index"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sku"')]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_type"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_doc"')]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zBQWSHABiy2kuAJGgim1"')]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_score"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.8594865")]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_source"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sku_id"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100000177760")]),s._v(",\n          "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"title"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"苹果 Apple iPhone XS Max (A2104) 256GB 金色 移动联通电信4G手机 双卡双待"')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_index"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sku"')]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_type"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_doc"')]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yxQVSHABiy2kuAJG8ilW"')]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_score"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.18577608")]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_source"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sku_id"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100002860826")]),s._v(",\n          "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"title"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"烟台红富士苹果 5kg 一级铂金大果 单果230g以上 新鲜水果"')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br")])]),a("p",[s._v("我们先看一下请求中的 URL，其中的：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("「sku」代表要在 sku 这个 INDEX 内进行查找，")])]),s._v(" "),a("li",[a("p",[s._v("「_search」是一个关键字，表示要进行搜索，")])]),s._v(" "),a("li",[a("p",[s._v("参数 pretty 表示格式化返回的 JSON，这样方便阅读。")])])]),s._v(" "),a("p",[s._v("再看一下请求 BODY 的 JSON，query 中的 match 表示要进行全文匹配，匹配的字段就是 title，关键字是「苹果手机」。")]),s._v(" "),a("p",[s._v("可以看到，在返回结果中，匹配到了 2 条商品记录，和我们在前面讲解倒排索引时，预期返回的结果是一致的。")]),s._v(" "),a("p",[s._v("我们来回顾一下使用 ES 构建商品搜索服务的这个过程：首先安装 ES 并启动服务，然后创建一个 INDEX，定义 MAPPING，写入数据后，执行查询并返回查询结果，其实，这个过程和我们使用数据库时，先建表、插入数据然后查询的过程，就是一样的。所以，你就把 ES 当做一个支持全文搜索的数据库来使用就行了。")]),s._v(" "),a("h2",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("p",[s._v("ES 本质上是一个支持全文搜索的分布式内存数据库，特别适合用于构建搜索系统。ES 之所以能有非常好的全文搜索性能，最重要的原因就是采用了倒排索引。倒排索引是一种特别为搜索而设计的索引结构，倒排索引先对需要索引的字段进行分词，然后以分词为索引组成一个查找树，这样就把一个全文匹配的查找转换成了对树的查找，这是倒排索引能够快速进行搜索的根本原因。")]),s._v(" "),a("p",[s._v("但是，倒排索引相比于一般数据库采用的 B 树索引，它的写入和更新性能都比较差，因此倒排索引也只是适合全文搜索，不适合更新频繁的交易类数据。")]),s._v(" "),a("p",[s._v("笔者：此文介绍了 倒排索引 为什么这么快，简单的介绍了 es 的存储查询相关知识点，非常简单，这里笔记将不跟着去实践了。")]),s._v(" "),a("h2",{attrs:{id:"思考题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思考题"}},[s._v("#")]),s._v(" 思考题")]),s._v(" "),a("p",[s._v("我们在电商的搜索框中搜索商品时，它都有一个搜索提示的功能，比如我输入「苹果」还没有点击搜索按钮的时候，搜索框下面会提示「苹果手机」、「苹果 11」、「苹果电脑」这些建议的搜索关键字，请你课后看一下 ES 的文档，想一下，如何用 ES 快速地实现这个搜索提示功能？")]),s._v(" "),a("p",[s._v("可以使用 ES 的 "),a("RouterLink",{attrs:{to:"/elasticsearch-senior/es-high/76-completion-suggest.html"}},[s._v("基于 completion suggest 实现搜索提示")]),s._v("，它使用的是 "),a("strong",[s._v("前缀索引")]),s._v(" 的方式来完成的匹配。")],1),s._v(" "),a("p",[s._v("下面是一个较完整的答案：")]),s._v(" "),a("p",[s._v("因为用户每输入一个字都可能会发请求查询搜索框中的搜索推荐。所以搜索推荐的请求量远高于搜索框中的搜索。es 针对这种情况提供了 "),a("code",[s._v("suggestion api")]),s._v("，并提供的专门的数据结构应对搜索推荐，性能高于 match，但它应用起来也有局限性，就是只能做 "),a("strong",[s._v("前缀匹配")]),s._v("。再结合 pinyin 分词器可以做到输入拼音字母就提示中文。如果想做非前缀匹配，可以考虑 Ngram。不过 Ngram 有些复杂，需要开发者自定义分析器。比如有个网址"),a("code",[s._v("www.geekbang.com")]),s._v("，用户可能记不清具体网址了，只记得网址中有 2 个 e，此时用户输入 ee 两个字母也是可以在搜索框提示出这个网址的。以上是我在工作中针对 "),a("strong",[s._v("前缀搜索推荐")]),s._v(" 和 "),a("strong",[s._v("非前缀搜索推荐")]),s._v(" 的实现方案。")])])}),[],!1,null,null,null);a.default=e.exports},307:function(s,a,t){s.exports=t.p+"assets/img/28a9b198c9b10a3b4d50a77d8fea6c0a.28a9b198.jpg"},308:function(s,a,t){s.exports=t.p+"assets/img/6fcdd7e10c3e72b2abe635c8a5a6ff1c.6fcdd7e1.jpg"},309:function(s,a,t){s.exports=t.p+"assets/img/7191b2ba0e28d8b7db9871213664a6c2.7191b2ba.jpg"},310:function(s,a,t){s.exports=t.p+"assets/img/cdbfcc01166ad3a1fd2a12791d0079df.cdbfcc01.jpg"},311:function(s,a,t){s.exports=t.p+"assets/img/e6cadb1ad8311de9772e673161f94999.e6cadb1a.jpg"}}]);