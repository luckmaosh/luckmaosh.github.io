(window.webpackJsonp=window.webpackJsonp||[]).push([[547],{1933:function(s,a,t){"use strict";t.r(a);var n=t(5),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"维护与数据恢复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#维护与数据恢复"}},[s._v("#")]),s._v(" 维护与数据恢复")]),s._v(" "),a("p",[s._v("有的时候，"),a("strong",[s._v("你需要对仓库进行清理 – 使它的结构变得更紧凑")]),s._v("，或是 "),a("strong",[s._v("对导入的仓库进行清理")]),s._v("，或是 "),a("strong",[s._v("恢复丢失的内容")]),s._v("。 这个小节将会介绍这些情况中的一部分。")]),s._v(" "),a("h2",{attrs:{id:"维护"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#维护"}},[s._v("#")]),s._v(" 维护")]),s._v(" "),a("p",[s._v("Git 会不定时地自动运行一个叫做 "),a("code",[s._v("auto gc")]),s._v(" 的命令。 大多数时候，这个命令并不会产生效果。 然而，"),a("strong",[s._v("如果有太多松散对象（不在包文件中的对象）或者太多包文件，Git 会运行一个完整的  "),a("code",[s._v("git gc")]),s._v("  命令")]),s._v("。 "),a("code",[s._v("gc")]),s._v("  代表垃圾回收，这个命令会做以下事情：")]),s._v(" "),a("ol",[a("li",[s._v("收集所有松散对象并将它们放置到包文件中")]),s._v(" "),a("li",[s._v("将多个包文件合并为一个大的包文件")]),s._v(" "),a("li",[s._v("移除与任何提交都不相关的陈旧对象。")])]),s._v(" "),a("p",[s._v("可以像下面一样手动执行自动垃圾回收：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" gc "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--auto")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("就像上面提到的，这个命令通常并不会产生效果。 大约需要 7000 个以上的松散对象或超过 50 个的包文件才能让 Git 启动一次真正的 gc 命令。 你可以通过修改 "),a("code",[s._v("gc.auto")]),s._v("  与  "),a("code",[s._v("gc.autopacklimit")]),s._v("  的设置来改动这些数值。")]),s._v(" "),a("p",[s._v("gc 将会做的另一件事是打包你的引用到一个单独的文件。 假设你的仓库包含以下分支与标签：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" .git/refs "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-type")]),s._v(" f\n.git/refs/heads/experiment\n.git/refs/heads/master\n.git/refs/tags/v1.0\n.git/refs/tags/v1.1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("如果你执行了 "),a("code",[s._v("git gc")]),s._v("  命令，refs 目录中将不会再有这些文件。 为了保证效率 Git 会将它们移动到名为 "),a("code",[s._v(".git/packed-refs")]),s._v("  的文件中，就像这样：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" .git/packed-refs\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pack-refs with: peeled fully-peeled")]),s._v("\ncac0cab538b970a37ea1e769cbbde608743bc96d refs/heads/experiment\nab1afef80fac8e34258ff41fc1b867c702daa24b refs/heads/master\ncac0cab538b970a37ea1e769cbbde608743bc96d refs/tags/v1.0\n9585191f37f7b0fb9444f35a9bf50de191beadc2 refs/tags/v1.1\n^1a410efbd13591db07496601ebc7a059dd55cfe9\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("如果你更新了引用，Git 并不会修改这个文件，而是向 "),a("code",[s._v("refs/heads")]),s._v("  创建一个新的文件。 为了获得指定引用的正确 SHA-1 值，Git 会首先在 refs 目录中查找指定的引用，然后再到 packed-refs 文件中查找。 所以，如果你在 refs 目录中找不到一个引用，那么它或许在 packed-refs 文件中。")]),s._v(" "),a("p",[s._v("注意这个文件的最后一行，它会以  "),a("code",[s._v("^")]),s._v("  开头。 这个符号表示它上一行的标签是附注标签，那一行是附注标签指向的那个提交。")]),s._v(" "),a("h2",{attrs:{id:"据恢复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#据恢复"}},[s._v("#")]),s._v(" 据恢复")]),s._v(" "),a("p",[s._v("在你使用 Git 的时候，你可能会意外丢失一次提交。 通常这是因为你强制删除了正在工作的分支，但是最后却发现你还需要这个分支；亦或者硬重置了一个分支，放弃了你想要的提交。 如果这些事情已经发生，该如何找回你的提交呢？")]),s._v(" "),a("p",[s._v("下面的例子将硬重置你的测试仓库中的 master 分支到一个旧的提交，以此来恢复丢失的提交。 首先，让我们看看你的仓库现在在什么地方：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--pretty")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("oneline\nab1afef80fac8e34258ff41fc1b867c702daa24b modified repo a bit\n484a59275031909e19aadb7c92262719cfcdf19a added repo.rb\n1a410efbd13591db07496601ebc7a059dd55cfe9 third commit\ncac0cab538b970a37ea1e769cbbde608743bc96d second commit\nfdf4fc3344e67ab068f836878b6c4951e3b15f3d first commit\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("现在，我们将 master 分支硬重置到第三次提：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--hard")]),s._v(" 1a410efbd13591db07496601ebc7a059dd55cfe9\nHEAD is now at 1a410ef third commit\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--pretty")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("oneline\n1a410efbd13591db07496601ebc7a059dd55cfe9 third commit\ncac0cab538b970a37ea1e769cbbde608743bc96d second commit\nfdf4fc3344e67ab068f836878b6c4951e3b15f3d first commit\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[a("strong",[s._v("现在顶部的两个提交已经丢失了 – 没有分支指向这些提交")]),s._v("。 你需要找出最后一次提交的 SHA-1 然后增加一个指向它的分支。 窍门就是找到最后一次的提交的 SHA-1 – 但是估计你记不起来了，对吗？")]),s._v(" "),a("p",[s._v("最方便，也是最常用的方法，是使用一个名叫  "),a("code",[s._v("git reflog")]),s._v("  的工具。 当你正在工作时，Git 会默默地记录每一次你改变 HEAD 时它的值。 每一次你提交或改变分支，引用日志都会被更新。 引用日志（reflog）也可以通过 "),a("code",[s._v("git update-ref")]),s._v("  命令更新，我们在 "),a("RouterLink",{attrs:{to:"/git-scm/10/03.html"}},[s._v("Git 引用")]),s._v(" 有提到使用这个命令而不是是直接将 SHA-1 的值写入引用文件中的原因。 你可以在任何时候通过执行 "),a("code",[s._v("git reflog")]),s._v(" 命令来了解你曾经做过什么：")],1),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reflog\n1a410ef HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(": reset: moving to 1a410ef\nab1afef HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(": commit: modified repo.rb a bit\n484a592 HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(": commit: added repo.rb\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("这里可以看到我们已经检出的两次提交，然而并没有足够多的信息。 为了使显示的信息更加有用，我们可以执行 "),a("code",[s._v("git log -g")]),s._v("，这个命令会以标准日志的格式输出引用日志。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-g")]),s._v("\ncommit 1a410efbd13591db07496601ebc7a059dd55cfe9\nReflog: HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Scott Chacon "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("schacon@gmail.com"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nReflog message: updating HEAD\nAuthor: Scott Chacon "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("schacon@gmail.com"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nDate:   Fri May "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(":22:37 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2009")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-0700")]),s._v("\n\n\t\tthird commit\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这种情况下，一般第一个是你当前的最后一个提交对象，下一个就是重置前的提交对象")]),s._v("\ncommit ab1afef80fac8e34258ff41fc1b867c702daa24b\nReflog: HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Scott Chacon "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("schacon@gmail.com"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nReflog message: updating HEAD\nAuthor: Scott Chacon "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("schacon@gmail.com"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nDate:   Fri May "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(":15:24 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2009")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-0700")]),s._v("\n\n       modified repo.rb a bit  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最好就是记住你的提交历史信息，来做对比")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("看起来下面的那个就是你丢失的提交，你可以通过创建一个新的分支指向这个提交来恢复它。 例如，你可以创建一个名为 "),a("code",[s._v("recover-branch")]),s._v("  的分支指向这个提交（ab1afef）：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch recover-branch ab1afef\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--pretty")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("oneline recover-branch\nab1afef80fac8e34258ff41fc1b867c702daa24b modified repo a bit\n484a59275031909e19aadb7c92262719cfcdf19a added repo.rb\n1a410efbd13591db07496601ebc7a059dd55cfe9 third commit\ncac0cab538b970a37ea1e769cbbde608743bc96d second commit\nfdf4fc3344e67ab068f836878b6c4951e3b15f3d first commit\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("不错，现在有一个名为 recover-branch 的分支是你的 master 分支曾经指向的地方，再一次使得前两次提交可到达了。 接下来，假设你丢失的提交因为某些原因不在引用日志中 – 我们可以通过移除 "),a("code",[s._v("recover-branch")]),s._v("  分支并删除引用日志来模拟这种情况。 现在前两次提交又不被任何分支指向了：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-D")]),s._v(" recover-branch\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-Rf")]),s._v(" .git/logs/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("由于 "),a("strong",[s._v("引用日志数据存放在  "),a("code",[s._v(".git/logs/")]),s._v("  目录中")]),s._v("，现在你已经没有引用日志了。 这时该如何恢复那次提交？ 一种方式是使用 "),a("code",[s._v("git fsck")]),s._v(" 实用工具，将会检查数据库的完整性。 如果使用一个  "),a("code",[s._v("–full")]),s._v("  选项运行它，它会向你显示出所有没有被其他对象指向的对象：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fsck")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--full")]),s._v("\nChecking object directories: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("256")]),s._v("/256"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", done.\nChecking objects: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v("/18"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", done.\ndangling blob d670460b4b4aece5915caf5c68d12f560a9fe3e4\ndangling commit ab1afef80fac8e34258ff41fc1b867c702daa24b\ndangling tree aea790b9a58f6cf6f2804eeac9f0abbe9631e4c9\ndangling blob 7108f7ecb345ee9d0084193f147cdad4d2998293\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("在这个例子中，你可以在  "),a("code",[s._v("dangling commit")]),s._v("  后看到你丢失的提交。 现在你可以用和之前相同的方法恢复这个提交，也就是添加一个指向这个提交的分支。")]),s._v(" "),a("h2",{attrs:{id:"移除对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#移除对象"}},[s._v("#")]),s._v(" 移除对象")]),s._v(" "),a("p",[s._v("Git 有很多很棒的功能，但是其中一个特性会导致问题，"),a("strong",[a("code",[s._v("git clone")]),s._v("  会下载整个项目的历史")]),s._v("，包括每一个文件的每一个版本。 如果所有的东西都是源代码那么这很好，因为 Git 被高度优化来有效地存储这种数据。 然而，如果某个人在之前向项目添加了一个大小特别大的文件，即使你将这个文件从项目中移除了，每次克隆还是都要强制的下载这个大文件。 之所以会产生这个问题，是因为这个文件在历史中是存在的，它会永远在那里。")]),s._v(" "),a("p",[s._v("当你迁移 Subversion 或 Perforce 仓库到 Git 的时候，这会是一个严重的问题。 因为这些版本控制系统并不下载所有的历史文件，所以这种文件所带来的问题比较少。 如果你从其他的版本控制系统迁移到 Git 时发现仓库比预期的大得多，那么你就需要找到并移除这些大文件。")]),s._v(" "),a("p",[a("strong",[s._v("警告：这个操作对提交历史的修改是破坏性的。")])]),s._v(" "),a("p",[a("strong",[s._v("它会从你必须修改或移除一个大文件引用最早的树对象开始重写每一次提交")]),s._v("。 如果你在导入仓库后，在任何人开始基于这些提交工作前执行这个操作，那么将不会有任何问题 – 否则，你必须通知所有的贡献者他们需要将他们的成果变基到你的新提交上。")]),s._v(" "),a("p",[s._v("为了演示，我们将添加一个大文件到测试仓库中，并在下一次提交中删除它，现在我们需要找到它，并将它从仓库中永久删除。 首先，添加一个大文件到仓库中：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" https://www.kernel.org/pub/software/scm/git/git-2.1.0.tar.gz "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" git.tgz\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" git.tgz\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'add git tarball'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("master 7b30847"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tarball\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" changed, "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" insertions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" deletions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n create mode "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100644")]),s._v(" git.tgz\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("哎呀 – 其实这个项目并不需要这个巨大的压缩文件。 现在我们将它移除：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" git.tgz\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git.tgz'")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'oops - removed large tarball'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("master dadf725"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" oops - removed large tarball\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" changed, "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" insertions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" deletions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n delete mode "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100644")]),s._v(" git.tgz\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("现在，我们执行 gc 来查看数据库占用了多少空间：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" gc\nCounting objects: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(", done.\nDelta compression using up to "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" threads.\nCompressing objects: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v("/13"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", done.\nWriting objects: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v("/17"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", done.\nTotal "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("delta "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", reused "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("delta "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("你也可以执行 count-objects 命令来快速的查看占用空间大小：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" count-objects "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v("\ncount: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\nsize: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),s._v("\nin-pack: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v("\npacks: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nsize-pack: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4868")]),s._v("\nprune-packable: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\ngarbage: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\nsize-garbage: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("size-pack 的数值指的是你的包文件以 KB 为单位计算的大小，所以你大约占用了 5MB 的空间。 在最后一次提交前，使用了不到 2KB – 显然，从之前的提交中移除文件并不能从历史中移除它。 每一次有人克隆这个仓库时，他们将必须克隆所有的 5MB 来获得这个微型项目，只因为你意外地添加了一个大文件。 "),a("strong",[s._v("现在来让我们彻底的移除这个文件")]),s._v("。")]),s._v(" "),a("p",[s._v("首先你必须找到它。 在本例中，你已经知道是哪个文件了。 但是假设你不知道；该如何找出哪个文件或哪些文件占用了如此多的空间？ 如果你执行 "),a("code",[s._v("git gc")]),s._v("  命令，所有的对象将被放入一个包文件中，你可以通过运行  "),a("code",[s._v("git verify-pack")]),s._v("  命令，然后对输出内容的第三列（即文件大小）进行排序，从而找出这个大文件。 你也可以将这个命令的执行结果通过管道传送给 "),a("code",[s._v("tail")]),s._v("  命令，因为你只需要找到列在最后的几个大对象。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" verify-pack "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" .git/objects/pack/pack-29…69.idx "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-k")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tail")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-3")]),s._v("\ndadf7258d699da2c8d89b09ef6670edb7d5f91b4 commit "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("229")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("159")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("\n033b4468fa6b2a9547a70d88d1bbe8bf3f9ed0d5 blob   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22044")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5792")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4977696")]),s._v("\n82c99a3e86bb1267b236a4b6eff7868d97489af1 blob   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4975916")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4976258")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1438")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("你可以看到这个大对象出现在返回结果的最底部：占用 5MB 空间。 为了找出具体是哪个文件，可以使用 "),a("code",[s._v("rev-list")]),s._v("  命令，我们在 "),a("RouterLink",{attrs:{to:"/git-scm/08/04.html"}},[s._v("指定特殊的提交信息格式")]),s._v(" 中曾提到过。 如果你传递  "),a("code",[s._v("–objects")]),s._v("  参数给 "),a("code",[s._v("rev-list")]),s._v("  命令，它就会列出所有提交的 SHA-1、数据对象的 SHA-1 和与它们相关联的文件路径。 可以使用以下命令来找出你的数据对象的名字：")],1),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rev-list "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--objects")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--all")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" 82c99a3\n82c99a3e86bb1267b236a4b6eff7868d97489af1 git.tgz\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("现在，"),a("strong",[s._v("你只需要从过去所有的树中移除这个文件")]),s._v("。 使用以下命令可以轻松地 "),a("strong",[s._v("查看哪些提交对这个文件产生改动")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--oneline")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--branches")]),s._v(" -- git.tgz\ndadf725 oops - removed large tarball\n7b30847 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tarball\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("现在，你必须重写 7b30847 提交之后的所有提交来从 Git 历史中完全移除这个文件。 为了执行这个操作，我们要使用 "),a("code",[s._v("filter-branch")]),s._v("  命令，这个命令在 "),a("RouterLink",{attrs:{to:"/git-scm/07/06.html"}},[s._v("重写历史")]),s._v(" 中也使用过：")],1),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" filter-branch --index-filter "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --ignore-unmatch --cached git.tgz'")]),s._v(" -- 7b30847^"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("\nRewrite 7b30847d080183a1ab7d18fb202473b3096e9f34 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("rm "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git.tgz'")]),s._v("\nRewrite dadf7258d699da2c8d89b09ef6670edb7d5f91b4 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("/2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nRef "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/master'")]),s._v(" was rewritten\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("code",[s._v("–index-filter")]),s._v("  选项类似于在 "),a("RouterLink",{attrs:{to:"/git-scm/07/06.html"}},[s._v("重写历史")]),s._v(" 中提到的的 "),a("code",[s._v("–tree-filter")]),s._v(" 选项，不过这个选项并不会让命令将修改在硬盘上检出的文件，而只是修改在暂存区或索引中的文件。")],1),s._v(" "),a("p",[s._v("你必须使用 "),a("code",[s._v("git rm –cached")]),s._v("  命令来移除文件，而不是通过类似 "),a("code",[s._v("rm file")]),s._v("  的命令 – 因为你需要从索引中移除它，而不是磁盘中。 还有一个原因是速度 – Git 在运行过滤器时，并不会检出每个修订版本到磁盘中，所以这个过程会非常快。 如果愿意的话，你也可以通过 "),a("code",[s._v("–tree-filter")]),s._v("  选项来完成同样的任务。 "),a("code",[s._v("git rm")]),s._v("  命令的  "),a("code",[s._v("–ignore-unmatch")]),s._v("  选项告诉命令：如果尝试删除的模式不存在时，不提示错误。 最后，使用 "),a("code",[s._v("filter-branch")]),s._v("  选项来重写自 7b30847 提交以来的历史，也就是这个问题产生的地方。 否则，这个命令会从最旧的提交开始，这将会花费许多不必要的时间。")]),s._v(" "),a("p",[s._v("你的历史中将不再包含对那个文件的引用。 不过，你的引用日志和你在  "),a("code",[s._v(".git/refs/original")]),s._v("  通过 "),a("code",[s._v("filter-branch")]),s._v("  选项添加的新引用中还存有对这个文件的引用，所以你必须移除它们然后重新打包数据库。 在重新打包前需要移除任何包含指向那些旧提交的指针的文件：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-Rf")]),s._v(" .git/refs/original\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-Rf")]),s._v(" .git/logs/\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" gc\nCounting objects: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(", done.\nDelta compression using up to "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" threads.\nCompressing objects: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("/11"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", done.\nWriting objects: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v("/15"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", done.\nTotal "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("delta "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", reused "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("delta "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("让我们看看你省了多少空间。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" count-objects "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v("\ncount: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("\nsize: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4904")]),s._v("\nin-pack: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v("\npacks: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nsize-pack: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\nprune-packable: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\ngarbage: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\nsize-garbage: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("打包的仓库大小下降到了 8K，比 5MB 好很多。 可以从 size 的值看出，这个大文件还在你的松散对象中，并没有消失；但是它不会在推送或接下来的克隆中出现，这才是最重要的。 如果真的想要删除它，可以通过有 "),a("code",[s._v("–expire")]),s._v("  选项的 "),a("code",[s._v("git prune")]),s._v("  命令来完全地移除那个对象：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" prune "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--expire")]),s._v(" now\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" count-objects "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v("\ncount: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\nsize: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\nin-pack: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v("\npacks: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nsize-pack: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\nprune-packable: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\ngarbage: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\nsize-garbage: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);