(window.webpackJsonp=window.webpackJsonp||[]).push([[545],{1929:function(s,t,a){"use strict";a.r(t);var e=a(5),r=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"引用规格"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引用规格"}},[s._v("#")]),s._v(" 引用规格")]),s._v(" "),t("p",[s._v("纵观全书，我们已经使用过一些诸如 "),t("strong",[s._v("远程分支到本地引用的简单映射方式")]),s._v("，但这种映射可以更复杂。 假设你添加了这样一个远程版本库：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" origin https://github.com/schacon/simplegit-progit\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("上述命令会在你的  "),t("code",[s._v(".git/config")]),s._v("  文件中添加一个小节，并在其中指定  "),t("strong",[s._v("远程版本库的名称（origin）")]),s._v("、"),t("strong",[s._v("URL")]),s._v(" 和一个 "),t("strong",[s._v("用于获取操作的引用规格（refspec）")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("remote "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"origin"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\turl "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" https://github.com/schacon/simplegit-progit\n\tfetch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" +refs/heads/*:refs/remotes/origin/*\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("引用规格的格式由一个可选的 + 号和紧随其后的  "),t("code",[s._v("<src>:<dst>")]),s._v("  组成，其中：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("<src>")]),s._v("  是一个模式（pattern），代表远程版本库中的引用；")]),s._v(" "),t("li",[t("code",[s._v("<dst>")]),s._v("  是那些远程引用在 "),t("strong",[s._v("本地所对应的位置")]),s._v("。 "),t("code",[s._v("+")]),s._v("  号告诉 Git 即使在不能快进的情况下也要（强制）更新引用。")])]),s._v(" "),t("p",[t("strong",[s._v("默认情况下，引用规格由  "),t("code",[s._v("git remote add")]),s._v(" 命令自动生成")]),s._v("， Git 获取服务器中 "),t("code",[s._v("refs/heads/")]),s._v("  下面的所有引用，并将它写入到本地的  "),t("code",[s._v("refs/remotes/origin/")]),s._v("  中。 所以，如果服务器上有一个 master 分支，我们可以在本地通过下面这种方式来访问该分支上的提交记录：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log origin/master\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log remotes/origin/master\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log refs/remotes/origin/master\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("上面的三个命令作用相同，因为 Git 会把它们都扩展成  "),t("code",[s._v("refs/remotes/origin/master")]),s._v("。")]),s._v(" "),t("p",[s._v("如果想让 Git 每次只拉取远程的 master 分支，而不是所有分支，可以把（引用规格的）获取那一行修改为：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("fetch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" +refs/heads/master:refs/remotes/origin/master\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("这仅是针对该远程版本库的 "),t("code",[s._v("git fetch")]),s._v("  操作的默认引用规格。 如果有某些只希望被执行一次的操作，我们也可以在命令行指定引用规格。 若要将远程的 master 分支拉到本地的 "),t("code",[s._v("origin/mymaster")]),s._v(" 分支，可以运行：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" fetch origin master:refs/remotes/origin/mymaster\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("你也可以指定多个引用规格。 在命令行中，你可以按照如下的方式拉取多个分支：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" fetch origin master:refs/remotes/origin/mymaster "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t topic:refs/remotes/origin/topic\nFrom git@github.com:schacon/simplegit\n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("rejected"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("        master     -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" origin/mymaster  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("non fast forward"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n * "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("new branch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("      topic      -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" origin/topic\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("在这个例子中，对 master 分支的拉取操作被拒绝，因为它不是一个可以快进的引用。 我们可以通过在引用规格之前指定 "),t("code",[s._v("+")]),s._v(" 号来覆盖该规则。")]),s._v(" "),t("p",[s._v("你也可以在配置文件中指定多个用于获取操作的引用规格。 如果想在每次获取时都包括 master 和 experiment 分支，添加如下两行：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("remote "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"origin"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\turl "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" https://github.com/schacon/simplegit-progit\n\tfetch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" +refs/heads/master:refs/remotes/origin/master\n\tfetch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" +refs/heads/experiment:refs/remotes/origin/experiment\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("我们不能在模式中使用部分通配符，所以像下面这样的引用规格是不合法的：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("fetch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" +refs/heads/qa*:refs/remotes/origin/qa*\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("但我们可以使用命名空间（或目录）来达到类似目的。 假设你有一个 QA 团队，他们推送了一系列分支，同时你只想要获取 master 和 QA 团队的所有分支而不关心其他任何分支，那么可以使用如下配置：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("remote "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"origin"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\turl "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" https://github.com/schacon/simplegit-progit\n\tfetch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" +refs/heads/master:refs/remotes/origin/master\n\tfetch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" +refs/heads/qa/*:refs/remotes/origin/qa/*\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("如果项目的工作流很复杂，有 QA 团队推送分支、开发人员推送分支、集成团队推送并且在远程分支上展开协作，你就可以像这样（在本地）为这些分支创建各自的命名空间，非常方便。")]),s._v(" "),t("h2",{attrs:{id:"引用规格推送"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引用规格推送"}},[s._v("#")]),s._v(" 引用规格推送")]),s._v(" "),t("p",[s._v("像上面这样  "),t("strong",[s._v("从远程版本库获取已在命名空间中的引用当然很棒")]),s._v("，但 QA 团队最初应该如何将他们的分支放入远程的 "),t("code",[s._v("qa/")]),s._v("  命名空间呢？ 我们可以通过引用规格推送来完成这个任务。")]),s._v(" "),t("p",[s._v("如果 QA 团队想把他们的 master 分支推送到远程服务器的 "),t("code",[s._v("qa/master")]),s._v(" 分支上，可以运行：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin master:refs/heads/qa/master\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("如果他们希望 Git 每次运行 "),t("code",[s._v("git push origin")]),s._v("  时都像上面这样推送，可以在他们的配置文件中添加一条 push 值：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("remote "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"origin"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\turl "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" https://github.com/schacon/simplegit-progit\n\tfetch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" +refs/heads/*:refs/remotes/origin/*\n\tpush "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" refs/heads/master:refs/heads/qa/master\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("正如刚才所指出的，这会让 "),t("code",[s._v("git push origin")]),s._v("  默认把本地 master 分支推送到远程 "),t("code",[s._v("qa/master")]),s._v(" 分支。")]),s._v(" "),t("h2",{attrs:{id:"删除引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除引用"}},[s._v("#")]),s._v(" 删除引用")]),s._v(" "),t("p",[s._v("你还可以借助类似下面的命令通过引用规格从远程服务器上删除引用：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin :topic\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("因为引用规格（的格式）是  "),t("code",[s._v("<src>:<dst>")]),s._v("，所以上述命令把  "),t("code",[s._v("<src>")]),s._v("  留空，意味着把远程版本库的 topic 分支定义为空值，也就是删除它。")])])}),[],!1,null,null,null);t.default=r.exports}}]);