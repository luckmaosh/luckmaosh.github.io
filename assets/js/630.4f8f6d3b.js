(window.webpackJsonp=window.webpackJsonp||[]).push([[630],{2062:function(t,r,e){"use strict";e.r(r);var s=e(5),n=Object(s.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"trie-tree"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#trie-tree"}},[t._v("#")]),t._v(" Trie tree")]),t._v(" "),r("p",[t._v("字典树的持久化储存\n如何把字典树保存到文件中使得我们可以快速重建字典树，特别是用于服务器重启的场景中。")]),t._v(" "),r("p",[t._v("我们可以定期对字典树取快照并存在文件中。如果服务器挂了，我们可以基于此重构字典树。保存的过程中，我们从根节点开始，逐层保存整棵树。对于每个节点，我们可以保存其中的每个字符以及多少个子节点。保存完每个节点之后，便是其所有的子节点。假设我们有如下的字典树：\n"),r("img",{attrs:{src:"https://p.ipic.vip/zgcrgc.jpg",alt:"字典树"}})]),t._v(" "),r("p",[t._v("如果我们按照上述方案保存到文件中，我们会得到“C2 A2 R1 T P O1 D”的序列（先序遍历），而且由此可以很容易恢复我们的字典树。")])])}),[],!1,null,null,null);r.default=n.exports}}]);